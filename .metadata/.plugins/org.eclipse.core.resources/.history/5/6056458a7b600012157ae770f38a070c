package serpis.psp;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

public class MultiHilo extends Thread  {
	private static ServerSocket serverSocket;
	private static Socket socket;

	
	public void run(){
		final String newLine = "\r\n";
		final int port = 8080;
		final String fileNameError404 = "fileError404.html"; 
		final String response200 = "HTTP/1.0 200 OK";
		final String response404 = "HTTP/1.0 404 NOT FOUND";
		
	
		Scanner scanner = null;
		try {
			scanner = new Scanner(socket.getInputStream());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	
		String fileName = "index.html";
		while (true){
			String line = scanner.nextLine();
			//if(line.startsWith("GET"))

			System.out.println(line);
			if(line.equals(""))
				break;
		}
		
		
		File file= new File(fileName);
		String responseFileName = file.exists() ? fileName : fileNameError404;		
		String response = file.exists() ? response200 : response404;
		
		String header  = response + newLine + newLine;
		byte[] headerBuffer = header.getBytes(); 
		
		OutputStream outputStream = null;
		try {
			outputStream = socket.getOutputStream();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			outputStream.write(headerBuffer);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		final int bufferSize = 2048;
		byte[] buffer = new byte[bufferSize];
		
		FileInputStream fileInputStream = null;
		try {
			fileInputStream = new FileInputStream(fileName);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		int count;
		try {
			while((count = fileInputStream.read(buffer))!=-1)
				try {
					outputStream.write(buffer, 0, count);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		try {
			fileInputStream.close();
			socket.close();
			serverSocket.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			
	
		}

	
}
